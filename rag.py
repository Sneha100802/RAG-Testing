# -*- coding: utf-8 -*-
"""RAG.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xHt9vmdvbebim7Wsrv5Vr548gCNjU0bf
"""

import streamlit as st
import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import faiss

# --- Load Data ---
@st.cache_data
def load_data():
    df = pd.read_csv( r"C:\Users\jhasn\OneDrive\Desktop\project\final_startup_data_cleaned.csv").fillna("")
    df['intent_text'] = df['Problem Statement'] + ' ' + df['Advantages'] + ' ' + \
                        df['Target Audience'] + ' ' + df['Tech Stack Required'] + ' ' + \
                        df['Business Model Type'] + ' ' + df['Budget Range']
    return df

df = load_data()

# --- TF-IDF + FAISS Setup ---
@st.cache_resource
def build_index(texts):
    vectorizer = TfidfVectorizer()
    X = vectorizer.fit_transform(texts)
    X_dense = X.toarray().astype("float32")

    index = faiss.IndexFlatL2(X_dense.shape[1])
    index.add(X_dense)
    return vectorizer, index, X_dense

vectorizer, index, embeddings = build_index(df['intent_text'])

# --- Retrieval Logic ---
def get_similar_startups(query, top_k=3):
    query_vec = vectorizer.transform([query]).toarray().astype("float32")
    _, idx = index.search(query_vec, top_k)
    return df.iloc[idx[0]]

# --- UI ---
st.title("üí° Startup Idea Recommender (Offline, No API)")
query = st.text_input("What's your startup idea, goal, or audience?")

if query:
    st.write("üîç Finding similar startup ideas...")
    results = get_similar_startups(query)

    for _, row in results.iterrows():
        st.markdown(f"### üöÄ {row['Project Name']}")
        st.write(f"**Problem:** {row['Problem Statement']}")
        st.write(f"**Tech Stack:** {row['Tech Stack Required']}")
        st.write(f"**Audience:** {row['Target Audience']}")
        st.write(f"**Business Model:** {row['Business Model Type']}")
        st.write(f"**Budget:** {row['Budget Range']}")
        st.markdown("---")